{"version":3,"sources":["components/header.js","components/steps/basics.js","components/generator.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","Navbar","expand","className","Brand","href","alt","src","Toggle","aria-controls","Collapse","id","Nav","Link","Component","BasicsStep","Row","Col","sm","FormGroup","Form","Label","FormControl","placeholder","aria-label","aria-describedby","as","value","Generator","App","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAMqBA,E,uKAEb,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,yBAAKC,UAAU,oBACX,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SACf,yBAAKC,IAAI,OAAOC,IAAI,iDAExB,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKT,UAAU,WACX,kBAACS,EAAA,EAAIC,KAAL,CAAUR,KAAK,SAAf,QACA,kBAACO,EAAA,EAAIC,KAAL,CAAUR,KAAK,SAAf,gB,GAZQS,a,qDCKvBC,EAAb,uKAGQ,OACG,oCACK,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,mBACA,kBAACC,EAAA,EAAD,CACIC,YAAY,aACZC,aAAW,aACXC,mBAAiB,iBAK7B,kBAACR,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,iBACA,kBAACC,EAAA,EAAD,CACIC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eAI7B,kBAACR,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,uBACA,kBAACC,EAAA,EAAD,CACII,GAAG,SACHH,YAAY,iBACZC,aAAW,iBACXC,mBAAiB,kBAGjB,4BAAQE,MAAM,QAAd,8BACA,4BAAQA,MAAM,gBAAd,iBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,kBAAd,mBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,oBAKhB,kBAACX,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,0BACA,kBAACC,EAAA,EAAD,CACII,GAAG,WACHH,YAAY,oBACZC,aAAW,oBACXC,mBAAiB,wBAI7B,kBAACR,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,+BACA,kBAAC,eAAD,QAGR,kBAACJ,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAKC,MAAN,oBACA,kBAAC,eAAD,cArE5B,GAAgCP,aCPXc,E,uKAGb,OACI,oCACI,yBAAKzB,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,QAAb,oIAGR,0BAAMA,UAAU,2BACZ,6BAASA,UAAU,gBACf,oDAGA,wEAKJ,kBAACiB,EAAA,EAAD,KACI,kBAAC,EAAD,a,GAtBeN,aCQxBe,MARf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,SCNSC,cAAe,CAC5BC,QAAS,K,SCSSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.89986d7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { \r\n    Navbar, \r\n    Nav\r\n} from 'react-bootstrap';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return(\r\n            <Navbar expand=\"lg\">\r\n                <div className=\"header container\">\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <img alt=\"Logo\" src=\"https://s.w.org/style/images/wporg-logo.svg\" />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </div>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { \r\n    Col, \r\n    Row, \r\n    FormGroup, \r\n    Form, \r\n    FormControl\r\n} from 'react-bootstrap';\r\n\r\nimport { ChromePicker } from 'react-color';\r\n\r\nexport class BasicsStep extends Component {\r\n\r\n    render() {\r\n        return(\r\n           <>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block Name</Form.Label>\r\n                            <FormControl\r\n                                placeholder=\"Block Name\"\r\n                                aria-label=\"Block Name\"\r\n                                aria-describedby=\"block-name\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm={3}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block ID</Form.Label>\r\n                            <FormControl\r\n                                placeholder=\"Block ID\"\r\n                                aria-label=\"Block ID\"\r\n                                aria-describedby=\"block-id\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block Category</Form.Label>\r\n                            <FormControl\r\n                                as=\"select\"\r\n                                placeholder=\"Block Category\"\r\n                                aria-label=\"Block Category\"\r\n                                aria-describedby=\"block-category\"\r\n                            >\r\n\r\n                                <option value=\"none\">Choose your Block category</option>\r\n                                <option value=\"CommonBlocks\">Common Blocks</option>\r\n                                <option value=\"Formatting\">Formatting</option>\r\n                                <option value=\"LayoutElements\">Layout Elements</option>\r\n                                <option value=\"Widgets\">Widgets</option>\r\n                                <option value=\"Embeds\">Embeds</option>\r\n                                <option value=\"own\">Own Category</option>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block Description</Form.Label>\r\n                            <FormControl\r\n                                as=\"textarea\"\r\n                                placeholder=\"Block Description\"\r\n                                aria-label=\"Block Description\"\r\n                                aria-describedby=\"block-description\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block Background Color</Form.Label>\r\n                            <ChromePicker />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <FormGroup>\r\n                            <Form.Label>Block Color</Form.Label>\r\n                            <ChromePicker />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n           </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { BasicsStep } from './steps/basics';\r\n\r\nexport default class Generator extends Component {\r\n    render() {\r\n        \r\n        return(\r\n            <>\r\n                <div className=\"jumbotron\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">Gutenberg Generator</h1>\r\n                        <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\r\n                    </div>   \r\n                </div>\r\n                <main className=\"gb__generator container\">\r\n                    <article className=\"global-space\">\r\n                        <h3>\r\n                            Gutenberg Components\r\n                        </h3>\r\n                        <p>\r\n                            Choose your components and check it out!\r\n                        </p>\r\n                    </article>\r\n\r\n                    <Form>\r\n                        <BasicsStep />\r\n                    </Form>         \r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Header from './components/header';\r\nimport Generator from './components/generator';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Generator />\r\n    </>\r\n  )\r\n}\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/style.scss';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();"],"sourceRoot":""}